worker_processes 2;
worker_rlimit_nofile 100000;

events {
	worker_connections 4096;
	multi_accept on;
	use epoll;
}

http {
	map $sent_http_content_type $expires {
		default	 	 	 	 	 	 	 	 	 	 off;
		text/html	 	 	 	 	 	 	 	 	 epoch;
		text/css	 	 	 	 	 	 	 	 	  1d;
		application/javascript	 	  1d;
		application/font-woff	 	 	 1d;
		application/font-woff2	 	  1d;
		application/x-font-ttf	 	  1d;
		~image/	 	 	 	 	 	 	 	 	 	 1d;
		~audio/	 	 	 	 	 	 	 	 	 	 1d;
		~video/	 	 	 	 	 	 	 	 	 	 1d;
	}

	upstream api_server {
		server api:3000;
	}

	server {
    listen 80;
    listen [::]:80;
    client_max_body_size 3M;

    return 301 https://$host$request_uri;
	}

  server {
      listen 443 ssl http2;
      listen [::]:443;

      ssl on;
      add_header                Strict-Transport-Security "max-age=31536000" always;
      ssl_session_cache         shared:SSL:20m;
      ssl_session_timeout       10m;
      ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
      ssl_prefer_server_ciphers on;
      ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";
      resolver                  8.8.8.8 8.8.4.4;
      ssl_stapling              on;
      ssl_stapling_verify       on;

      include /etc/nginx/ssl.conf;

      reset_timedout_connection on;
      client_body_timeout       10;
      send_timeout              5;
      keepalive_requests 100000;
      keepalive_timeout  60;
      tcp_nodelay on;
      tcp_nopush  on;

      location /api {
        include /etc/nginx/gzip.conf;

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_pass http://api_server;
      }

      location / {
        include /etc/nginx/gzip.conf;

        root /var/www/web/static;
        index index.html;
        include /etc/nginx/mime.types;

        try_files $uri $uri/ /index.html =404;
      }

      location ^~ /.well-known {
        allow all;
        root /data/letsencrypt;
      }
  }
}
